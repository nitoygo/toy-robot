#include "Orientation.h"
#include "Rotation.h"

#include <unordered_map>


const std::string Orientation::kNorthFacing = "NORTH";
const std::string Orientation::kEastFacing = "EAST";
const std::string Orientation::kWestFacing = "WEST";
const std::string Orientation::kSouthFacing = "SOUTH";

// "NORTH": {
//   "LEFT": "WEST",
//   "RIGHT": "EAST"
// },
// "WEST": {
//    "LEFT": "SOUTH",
//    "RIGHT": "NORTH"
// }
// :
/*
std::map<std::string, std::vector<int>> mapOfOccur = {
                            { "Riti", { 3, 4, 5, 6 } },
                            { "Jack", { 1, 2, 3, 5 } }
                            };
*/

const std::unordered_map<std::string, std::unordered_map<Orientation, std::string>> transition = {
    {
        Orientation::kNorthFacing, { 
            {Rotation::kLeftRotate, Orientation::kWestFacing},  
            {Rotation::kRightRotate, Orientation::kEastFacing} 
        } 
    },
    { 
        Orientation::kEastFacing, { 
            {Rotation::kLeftRotate, Orientation::kNorthFacing}, 
            {Rotation::kRightRotate, Orientation::kSouthFacing} 
        } 
    },
    { 
        Orientation::kWestFacing,  { 
            {Rotation::kLeftRotate, Orientation::kSouthFacing}, 
            {Rotation::kRightRotate, Orientation::kNorthFacing} 
        } 
    },
    { 
        Orientation::kSouthFacing, { 
            {Rotation::kLeftRotate, Orientation::kEastFacing},  
            {Rotation::kRightRotate, Orientation::kWestFacing}
        } 
    },
};

void Orientation::RotateLeft() {
    value_ = transition.at(value_).at(Rotation::kLeftRotate);
}

void Orientation::RotateRight() {
    value_ = transition.at(value_).at(Rotation::kLeftRotate);
}
